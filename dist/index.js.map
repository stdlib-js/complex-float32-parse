{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar Complex64 = require( '@stdlib/complex-float32-ctor' );\nvar replace = require( '@stdlib/string-base-replace' );\nvar format = require( '@stdlib/string-format' );\n\n\n// FUNCTIONS //\n\n/**\n* Matches a complex number string.\n*\n* @private\n* @returns {RegExp} regular expression\n*\n* @example\n* var re = regexp();\n* // returns /^([-+]?(\\d*\\.?\\d*(?:[eE][-+]?\\d+)?|Infinity|NaN)i?)?([-+])?((\\d*\\.?\\d*(?:[eE][-+]?\\d+)?|Infinity|NaN)i)?$/\n*/\nfunction regexp() {\n\treturn /^([-+]?(\\d*\\.?\\d*(?:[eE][-+]?\\d+)?|Infinity|NaN)i?)?([-+])?((\\d*\\.?\\d*(?:[eE][-+]?\\d+)?|Infinity|NaN)i)?$/;\n}\n\n\n// MAIN //\n\n/**\n* Parse a string representation of a complex number and returns a Complex64 instance.\n*\n* @param {string} str - string representation of a complex number\n* @throws {TypeError} must provide a string\n* @throws {Error} must provide a valid string representation of a complex number\n* @returns {Complex64} 64-bit complex number\n*\n* @example\n* var str = '1 + 2i';\n* var z = parseComplex64( str );\n* // returns <Complex64>\n*/\nfunction parseComplex64( str ) {\n\tvar match;\n\tvar re;\n\tvar im = 0;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\n\tmatch = replace( str, /\\s/g, '' ).match( regexp() );\n\tif ( !match ) {\n\t\tthrow new Error( format( 'invalid argument. Unable to parse input string as a complex number. Value: `%s`.', str ) );\n\t}\n\n\t// Real part:\n\tre = ( match[1] && !match[1].endsWith( 'i' ) ) ? parseFloat( match[1] ) : 0;\n\n\t// Imaginary part:\n\tif ( match[4] ) {\n\t\tim = ( ( match[3] === '-' ) ? -1 : 1 ) * parseFloat( replace( match[4], /i$/, '' ) );\n\t} else if ( match[1] && match[1].endsWith( 'i' ) ) {\n\t\tim = parseFloat( replace( match[1], /i$/, '' ) );\n\t}\n\treturn new Complex64( re, im );\n}\n\n\n// EXPORTS //\n\nmodule.exports = parseComplex64;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Parse a string representation of a complex number and returns a Complex64 instance.\n*\n* @module @stdlib/complex-float32-parse\n*\n* @example\n* var parseComplex64 = require( '@stdlib/complex-float32-parse' );\n*\n* var str = '1 + 2i';\n*\n* var z = parseComplex64( str );\n* // returns <Complex64>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAY,QAAS,8BAA+B,EACpDC,EAAU,QAAS,6BAA8B,EACjDC,EAAS,QAAS,uBAAwB,EAe9C,SAASC,GAAS,CACjB,MAAO,2GACR,CAkBA,SAASC,EAAgBC,EAAM,CAC9B,IAAIC,EACAC,EACAC,EAAK,EAET,GAAK,CAACT,EAAUM,CAAI,EACnB,MAAM,IAAI,UAAWH,EAAQ,kEAAmEG,CAAI,CAAE,EAIvG,GADAC,EAAQL,EAASI,EAAK,MAAO,EAAG,EAAE,MAAOF,EAAO,CAAE,EAC7C,CAACG,EACL,MAAM,IAAI,MAAOJ,EAAQ,mFAAoFG,CAAI,CAAE,EAIpH,OAAAE,EAAOD,EAAM,CAAC,GAAK,CAACA,EAAM,CAAC,EAAE,SAAU,GAAI,EAAM,WAAYA,EAAM,CAAC,CAAE,EAAI,EAGrEA,EAAM,CAAC,EACXE,GAASF,EAAM,CAAC,IAAM,IAAQ,GAAK,GAAM,WAAYL,EAASK,EAAM,CAAC,EAAG,KAAM,EAAG,CAAE,EACxEA,EAAM,CAAC,GAAKA,EAAM,CAAC,EAAE,SAAU,GAAI,IAC9CE,EAAK,WAAYP,EAASK,EAAM,CAAC,EAAG,KAAM,EAAG,CAAE,GAEzC,IAAIN,EAAWO,EAAIC,CAAG,CAC9B,CAKAV,EAAO,QAAUM,ICrDjB,IAAIK,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isString", "Complex64", "replace", "format", "regexp", "parseComplex64", "str", "match", "re", "im", "main"]
}
